name: Linux Build
on: [push, pull_request]

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-linux
  cancel-in-progress: true

jobs:
  linux:
    name: üêß
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux-gcc
          - linux-clang
          - mingw
          - rpi
          - arm
        lib-type:
          - static
          - shared
        architecture:
          - 64
          - 32
        build-type:
          - rel
          - dbg
    env:
      HOST: ${{ github.job }}
      PLATFORM: ${{ matrix.platform }}
      BUILD_TYPE: ${{ matrix.build-type }}
      LIB_TYPE: ${{ matrix.lib-type }}
      ARCH: ${{ matrix.architecture }}
      DBE_TAG: master
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with: { fetch-depth: 0 }
      - name: Source checksum
        id: source_checksum
        run: rake source_checksum
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            build/cache/.ccache
            build/cache/.gradle/caches
            build/cache/.gradle/wrapper
          key: |
            ${{ matrix.platform }}-${{ matrix.lib-type }}-${{ matrix.architecture }}-${{ matrix.build-type }}-${{ env.DBE_TAG }}-${{ steps.source_checksum.outputs.hexdigest }}
          restore-keys: |
            ${{ matrix.platform }}-${{ matrix.lib-type }}-${{ matrix.architecture }}-${{ matrix.build-type }}-${{ env.DBE_TAG }}
            ${{ matrix.platform }}-${{ matrix.lib-type }}-${{ matrix.architecture }}-${{ matrix.build-type }}
      - name: DBE
        run: rake update_dot_files && script/dockerized.sh ${PLATFORM/-*} env
      - name: CMake
        run: script/dockerized.sh ${PLATFORM/-*} rake cmake
      - name: Build
        run: script/dockerized.sh ${PLATFORM/-*} rake build
      - name: Test
        run: script/dockerized.sh ${PLATFORM/-*} rake test
        if: startsWith(matrix.platform, 'linux') || matrix.platform == 'android'
      - name: Install
        run: script/dockerized.sh ${PLATFORM/-*} rake install
      - name: Scaffolding - new
        run: script/dockerized.sh ${PLATFORM/-*} rake new
      - name: Scaffolding - build
        run: |
          cd build/cache/projects/UrhoApp
          script/dockerized.sh ${PLATFORM/-*}
      - name: Scaffolding - test
        run: |
          cd build/cache/projects/UrhoApp
          script/dockerized.sh ${PLATFORM/-*} rake test
        if: startsWith(matrix.platform, 'linux')
      - name: Scaffolding - cleanup
        run: rm -rf build/cache/{.urho3d,projects}
      - name: Package
        run: script/dockerized.sh ${PLATFORM/-*} rake package
        if: github.event_name == 'push' && !(matrix.platform == 'mingw' && matrix.build-type == 'dbg')
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform }}-${{ matrix.lib-type }}-${{ matrix.architecture }}-${{ matrix.build-type }}
          path: |
            build/ci/*.tar.gz
            build/*.out
        if: github.event_name == 'push' && !(matrix.platform == 'mingw' && matrix.build-type == 'dbg')
        continue-on-error: ${{ !startsWith(github.ref, 'refs/tags/') }}
